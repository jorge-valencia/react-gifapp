{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","setImages","useEffect","then","imgs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE9B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeI,OACI,sBAAMC,SAVO,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKd,SACG,uBACKO,KAAK,OACLC,MAAQT,EACRU,SAlBU,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,uBCNVG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcbM,GAda,4CAAH,sDCAXO,EAAc,SAAEL,GAEzB,OACI,sBAAKM,UAAU,6CAAf,UACG,qBAAKC,IAAOP,EAAIA,IAAIR,IAAKgB,IAAOR,EAAIA,IAAIE,QACxC,kCAAMF,EAAIA,IAAIE,MAAd,WCHEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,EAA4Bd,mBAAS,IAArC,mBAAO2B,EAAP,KAAeO,EAAf,KAQA,OANAC,qBAAW,WACRtB,EAASC,GACRsB,MAAM,SAAAC,GAAI,OAAIH,EAAUG,QACzB,CAAEvB,IAID,qCACI,6BAAMA,IACN,qBAAKgB,UAAY,YAAjB,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,CACIA,IAAQA,GACAA,EAAIC,aCnBvBa,EAAe,WAExB,MAAoCtC,mBAAS,CAAC,KAA9C,mBAAOuC,EAAP,KAAmBxC,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAGQwC,EAAWhB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCZpC0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.79d03976.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\nconst [inputValue, setInputValue] = useState('');\n\nconst handleInputChange = ( e ) => {\n    setInputValue(e.target.value);\n}\n\nconst handleSubmit = ( e ) => {\n    e.preventDefault();\n\n    if( inputValue.trim().length > 2){\n        setCategories( cats => [inputValue, ...cats] );\n        setInputValue('');\n    }\n\n}\n    return (\n        <form onSubmit = { handleSubmit } >\n           <input \n                type=\"text\"\n                value= {inputValue}\n                onChange = { handleInputChange }\n           />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n    export const getGifs = async( category ) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=XGz6Dl6MdtqGQdzzKtk6MW7iRjrcaj2w`;\n        const resp = await fetch(url);\n        const { data } = await resp.json();\n\n        const gifs = data.map ( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n\n       return gifs;\n\n    }","import React from 'react'\n\nexport const GifGridItem = ( img ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\">\n           <img src = {img.img.url} alt= { img.img.title } />\n           <p> { img.img.title } </p>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const [images, setImages] = useState([]);\n\n    useEffect( () => {\n       getGifs( category )\n       .then( imgs => setImages(imgs))\n    }, [ category ])\n\n\n    return (\n        <>\n            <h3>{ category }</h3>\n            <div className = 'card-grid'>\n              \n                {\n                    images.map( img => (\n                    <GifGridItem \n                        img = { img } \n                        key = { img.id }\n                    />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories } />\n            <hr/>\n            <ol>\n                { \n\n                    categories.map( category =>(\n                        <GifGrid \n                            key = { category }\n                            category = { category } />\n                    ))\n            \n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}